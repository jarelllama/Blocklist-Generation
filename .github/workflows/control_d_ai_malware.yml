name: Build Control D AI Malware Blocklist
#run-name:
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Provide Git identity
        run: |
          git config user.email ${{ vars.GIT_EMAIL }}
          git config user.name ${{ vars.GIT_USERNAME }}
  
      - name: Download Tranco TOP1M
        run: |
          wget https://tranco-list.eu/top-1m.csv.zip
          unzip top-1m.csv.zip
          
      - name: Download DomCop TOP10M
        run: |
          wget https://www.domcop.com/files/top/top10milliondomains.csv.zip
          unzip top10milliondomains.csv.zip
          
      - name: Format and merge lists
        run: |
          # Format Tranco TOP1M
          # Output domain column
          # Remove carriage return/CRLF
          cut -d ',' -f 2 top-1m.csv \
            | sed 's/\r//' > top-1m.txt
          
          # Format DomCop TOP10M
          # Remove header
          # Remove double quotes
          tail -n +2 top10milliondomains.csv \
            | cut -d ',' -f 2 \
            | awk '{gsub(/"/ ,""); print}' > top10milliondomains.txt

          # Merge lists
          cat top-1m.txt top10milliondomains.txt > input.txt
          sort -u input.txt -o input.txt

          # Collate top domains
          head -n 1000 top-1m.txt > top_slds.txt
          head -n 1000 top10milliondomains.txt >> top_slds.txt
          # Filter out .gov and .edu TLDs
          # Remove www subdomain
          grep -vE '\.(gov|edu)(\.[a-z]{2})?$' top_slds.txt \
            | awk '{sub("^www\\." ,""); print}' > top_slds.tmp
          sort -u top_slds.tmp -o top_slds.txt
          # Remove top domains
          comm -23 input.txt top_slds.txt > input.tmp
          mv input.tmp input.txt
          
          grep -vE '\.(gov|edu)(\.[a-z]{2})?$' input.txt \
            | awk '{sub("^www\\." ,""); print}' > input.tmp
          sort -u input.tmp -o input.txt
          
          # Remove domains with common SLDs
          while read -r entry; do
            grep "\.${entry}$" input.txt >> white_slds.txt || true
          done < top_slds.txt
          grep -vxFf white_slds.txt input.txt > input.tmp
          mv input.tmp input.txt
          
          wc -l input.txt
          
      - name: Get public IP of runner
        run: |
          ip=$(curl -s http://ipinfo.io/ip)
          echo "$ip"
          
          
      
        
          

          
          
          
